/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* '*' is a universal selector en selecteerd elk element. */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* border and padding will no longer be added to the total wihdth/height of the box*/
}

/* font-fam moet in body niet in de universal selector*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;
  /* bg img een afbeelding, met daarover heen linear-gradient met transpirantie*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  /* Snij de afbeelding uit in de polygon vorm*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* we zetten deze op relative zodat absolute child .logo-box dit element als nul punt heeft */
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.header__logo {
  height: 30px;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* transform kan een element aanpassen, bijvoorbeeld roteren of in dit geval 50% van zn breedte en hoogte verplaatsen. */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading--primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 50px;
  backface-visibility: hidden; /* fix for shaking shaking animations */
}

.heading-primary--main {
  /* a block element extends to the entire available width*/
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInFromLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: 2s; */
}

.heading-primary--sub {
  display: block;
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 17.4px;

  animation: moveInFromRight 1s ease-out;
}

@keyframes moveInFromLeft {
  0% {
    opacity: 0;
    transform: translateX(-100%);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInFromRight {
  0% {
    opacity: 0;
    transform: translateX(+100%);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInFromBottom {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* :link is a pseudo class */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  /* there can be a transition on all the states, for transform in the pseudo classes */
  transition: all 0.2s;
  position: relative;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/* ::after, treated as a html child element of the btn */
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn--white::after {
  background-color: #fff;
}
/* on 'normal' btn hover, btn::after should transform */
.btn:hover::after {
  transform: scale(1.5);
  opacity: 0;
}

.btn--animated {
  animation: moveInFromBottom 0.5 ease-out 0.75s;

  /* this will apply the 0% animation properties before the animation start, so you dont get a glitch before the animation starts */
  animation-fill-mode: backwards;
}
